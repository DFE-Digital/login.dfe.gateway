{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "metadata": {
                "description": "This is the name that will be assigned to the gateway"
            }
        },
        "environmentName": {
            "type": "string"
        },
        "projectCoreRgName": {
            "type": "string"
        },
        "vnetName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "sslKeyVaultCertSecretId": {
            "type": "string"
        },
        "userAssignedIdentityName": {
            "type": "string"
        },

        "projectId": {
            "type": "string",
            "defaultValue": "s141"
        },
        "environmentId": {
            "type": "string",
            "allowedValues": [
                "d01",
                "t01",
                "t02",
                "t03",
                "p01",
                "p02"
            ]
        },
        "hostName1": {
            "type": "string",
            "defaultValue": "oidc",
            "metadata": {
                "description": "Web App name"
            }
        },
        "hostName2": {
            "type": "string",
            "defaultValue": "interactions",
            "metadata": {
                "description": "Web App name"
            }
        },
        "domainSuffix": {
            "type": "string",
            "defaultValue": "education.gov.uk"
        },
        "project": {
            "type": "string",
            "defaultValue": "signin"
        },
        "isProduction": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Overide with 'true' for production"
            }
        }
    },
    "functions": [
    ],
    "variables": {
        "baseName": "[tolower(concat(parameters('applicationName'), '-', parameters('environmentName')))]",
        "resourceNames": {
            "applicationGateway": {
                "name": "[concat(variables('baseName'), '-ag')]",
                "hostedServices": {
                    "default": {
                        "backendPoolName": "default-pool",
                        "backendSettingName": "default-backend-setting",
                        "backendSettingProbeName": "default-backend-setting-probe"
                    }
                },
                "sslCertificateName": "gateway-ssl-cert",
                "listenerName": "gateway-ssl-listener",
                "routingRuleName": "gateway-default-ruleset",
                "frontEndPortName": "gateway-frontend-port",
                "frontEndIpConfigurationName": "gateway-frontend-ip-config"
            },
            "publicIpName": "[concat(variables('baseName'), '-pip')]",
            "wafPolicy": "[concat(variables('baseName'), '-waf-policy')]"
        },
        "resourceIds": {
            "userAssignedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('userAssignedIdentityName'))]",
            "publicIpResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIpName)]",
            "vnetResourceId": "[resourceId(parameters('projectCoreRgName'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
            "subnetResourceId": "[resourceId(parameters('projectCoreRgName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
            "wafPolicyId": "[resourceId('Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies', variables('resourceNames').wafPolicy)]",
            "applicationGateway": {
                "resourceId": "[resourceId('Microsoft.Network/applicationGateways', variables('resourceNames').applicationGateway.name)]",
                "hostedServices": {
                    "default": {
                        "poolResourceId": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceNames').applicationGateway.name), '/backendAddressPools/', variables('resourceNames').applicationGateway.hostedServices.default.backendPoolName)]",
                        "backendSettingResourceId": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceNames').applicationGateway.name), '/backendHttpSettingsCollection/', variables('resourceNames').applicationGateway.hostedServices.default.backendSettingName)]",
                        "probeResourceId": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('resourceNames').applicationGateway.name), '/probes/', variables('resourceNames').applicationGateway.hostedServices.default.backendSettingProbeName)]"
                    }
                }
            }
        },
        "applicationGateway": {
            "name": "[variables('resourceNames').applicationGateway.name]",
            "resourceId": "[variables('resourceIds').applicationGateway.resourceId]",
            "hostedServices": {
                "default": {
                    "poolName": "[variables('resourceNames').applicationGateway.hostedServices.default.backendPoolName]",
                    "pathMap": "/default/*",
                    "backendSetting": {
                        "name": "[variables('resourceNames').applicationGateway.hostedServices.default.backendSettingName]",
                        "port": 443,
                        "protocol": "Https",
                        "requestTimeout": 20,
                        "probe": {
                            "name": "[variables('resourceNames').applicationGateway.hostedServices.default.backendSettingProbeName]",
                            "protocol": "Https",
                            "path": "/"
                        }
                    }
                }
            },
            "backendPool": {
                "name": "[variables('resourceNames').applicationGateway.hostedServices.default.backendPoolName]",
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/backendAddressPools/', variables('resourceNames').applicationGateway.hostedServices.default.backendPoolName)]"
            },
            "backendSetting": {
                "name": "[variables('resourceNames').applicationGateway.hostedServices.default.backendSettingName]",
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/backendHttpSettingsCollection/', variables('resourceNames').applicationGateway.hostedServices.default.backendSettingName)]"
            },
            "sslCertificate": {
                "name": "[variables('resourceNames').applicationGateway.sslCertificateName]",
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/sslCertificates/', variables('resourceNames').applicationGateway.sslCertificateName)]"
            },
            "httpListener": {
                "name": "[variables('resourceNames').applicationGateway.listenerName]",
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/httpListeners/', variables('resourceNames').applicationGateway.listenerName)]"
            },
            "routingRule": {
                "name": "[variables('resourceNames').applicationGateway.routingRuleName]",
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/requestRoutingRules/', variables('resourceNames').applicationGateway.routingRuleName)]"
            },
            "frontEndPort": {
                "name": "[variables('resourceNames').applicationGateway.frontEndPortName]",
                "port": 443,
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/frontendPorts/', variables('resourceNames').applicationGateway.frontEndPortName)]"
            },
            "frontEndIpConfiguration": {
                "name": "[variables('resourceNames').applicationGateway.frontEndIpConfigurationName]",
                "resourceId": "[concat(variables('resourceIds').applicationGateway.resourceId, '/frontendIPConfigurations/', variables('resourceNames').applicationGateway.frontEndIpConfigurationName)]"
            }
        },
        "domains": {
            "oidcFqdn1": "[concat(parameters('projectId'),parameters('environmentId'),'-',parameters('project'),'-',parameters('hostName1'),'-1','.azurewebsites.net')]",
            "oidcFqdn2": "[concat(parameters('projectId'),parameters('environmentId'),'-',parameters('project'),'-',parameters('hostName1'),'-2','.azurewebsites.net')]",
            "interactions1": "[concat(parameters('projectId'),parameters('environmentId'),'-',parameters('project'),'-',parameters('hostName2'),'-1','.azurewebsites.net')]",
            "interactions2": "[concat(parameters('projectId'),parameters('environmentId'),'-',parameters('project'),'-',parameters('hostName2'),'-2','.azurewebsites.net')]",
            "oidcUrl": "[if(parameters('isProduction'), concat(parameters('hostName1'),'.',parameters('project'),'.',parameters('domainSuffix')),concat(parameters('environmentName'),'-',parameters('hostName1'),'.',parameters('project'),'.',parameters('domainSuffix')))]",
            "interactionsUrl": "[if(parameters('isProduction'), concat(parameters('hostName2'),'.',parameters('project'),'.',parameters('domainSuffix')),concat(parameters('environmentName'),'-',parameters('hostName2'),'.',parameters('project'),'.',parameters('domainSuffix')))]"

        }
    },
    "resources": [
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies",
            "name": "[variables('resourceNames').wafPolicy]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "customRules": [],
                "policySettings": {
                    "fileUploadLimitInMb": 100,
                    "maxRequestBodySizeInKb": 128,
                    "mode": "Detection",
                    "requestBodyCheck": true,
                    "state": "Enabled"
                },
                "managedRules": {
                    "exclusions": [
                        {
                            "selectorMatchOperator": "EqualsAny",
                            "selector": "(https://dfeconsent.azurewebsites.net/auth/cb,https://dfeconsentuiuat.azurewebsites.net/auth/cb,https://int-help.signin.education.gov.uk:443/auth/cb,https://admin.multiplication-tables-check.service.gov.uk/auth-dso,https://traineeteacherportal.education.gov.uk/default.aspx,https://int-profile.signin.education.gov.uk:443/auth/cb,https://s141t03-signin-pfl-as.azurewebsites.net:443/auth/cb,https://signin-int-pfl-as.azurewebsites.net:443/auth/,https://signin-int-pfllnx-as.azurewebsites.net:443/auth/cb,https://int-services.signin.education.gov.uk:443/auth/cb,https://s141t03-signin-svc-as.azurewebsites.net:443/auth/cb,https://signin-int-svc-as.azurewebsites.net:443/auth/cb,https://signin-int-svclnx-as.azurewebsites.net:443/auth/cb,https://tools.apprenticeships.education.gov.uk/grafana/login/generic_oauth,https://schoolexperience.education.gov.uk/auth/callback,https://schoolexperience.education.gov.uk/auth/dfe/callback,https://int-manage.signin.education.gov.uk:443,https://int-manage.signin.education.gov.uk:443/auth/cb,https://s141t03-signin-mng-as.azurewebsites.net:443,https://s141t03-signin-mng-as.azurewebsites.net:443/auth/cb,https://signin-int-mnglnx-as.azurewebsites.net:443,https://signin-int-mnglnx-as.azurewebsites.net:443/auth/cb,https://signin-pr-mnglnx-as.azurewebsites.net:443,https://signin-pr-mnglnx-as.azurewebsites.net:443/auth/cb,http://localhost:4431/oidc/cb,https://int-gias.signin.education.gov.uk/oidc/cb,https://localhost:4431/oidc/cb,https://s141t03-signin-gias.azurewebsites.net/oidc/cb,http://localhost/saml/cb,https://int-kts-sa.signin.education.gov.uk/oidc/cb,https://int-kts-sa.signin.education.gov.uk/saml/cb,https://s141t03-sa.signin.education.gov.uk:443/oidc/cb,https://s141t03-signin-kts.azurewebsites.net/oidc/cb,https://s141t03-signin-saml-kts-sa.azurewebsites.net/saml/cb,https://s141t03-signin-saml-as.azurewebsites.net:443,https://s141t03-signin-saml-as.azurewebsites.net:443/oidc/cb,https://saml-int.signin.education.gov.uk:443,https://saml-int.signin.education.gov.uk:443/oidc/cb,https://signin-int-saml-as.azurewebsites.net:443,https://signin-int-saml-as.azurewebsites.net:443/oidc/cb,https://int-kts.signin.education.gov.uk,https://int-kts.signin.education.gov.uk/oidc/cb,https://int-kts.signin.education.gov.uk:443,https://int-kts.signin.education.gov.uk:443/oidc/cb,https://s141t03-signin-saml-kts-la.azurewebsites.net/oidc/cb,https://signin-pr-kts-as.azurewebsites.net,https://signin-pr-kts-as.azurewebsites.net/oidc/cb,https://signin-pr-kts-as.azurewebsites.net:443,https://signin-pr-kts-as.azurewebsites.net:443/oidc/cb,https://www.keytosuccess.education.gov.uk/cgi-bin/kts/index,https://collect.signin.education.gov.uk,https://collect.signin.education.gov.uk/oidc/cb,https://collect.signin.education.gov.uk:433,https://collect.signin.education.gov.uk:433/oidc/cb,https://int-collect.signin.education.gov.uk/oidc/cb,https://a2c.education.gov.uk/signin-oidc,https://webapp-t1pr-b-sip-a2c.azurewebsites.net/signin-oidc,https://dqt.signin.education.gov.uk,https://dqt.signin.education.gov.uk/oidc/cb,https://dqt.signin.education.gov.uk:443,https://dqt.signin.education.gov.uk:443/oidc/cb,https://int-dqt.signin.education.gov.uk/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net,https://lgn-dqt-as-github.azurewebsites.net/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net:443,https://lgn-dqt-as-github.azurewebsites.net:443/oidc/cb,https://signin-dqt-as.azurewebsites.net,https://signin-dqt-as.azurewebsites.net/oidc/cb,https://signin-dqt-as.azurewebsites.net:443,https://signin-dqt-as.azurewebsites.net:443/oidc/cb,https://additional-teaching-payment.education.gov.uk/admin/auth/callback,https://additional-teaching-payment.education.gov.uk/auth/callback,https://www.claim-additional-teaching-payment.service.gov.uk/admin/auth/callback,https://www.claim-additional-teaching-payment.service.gov.uk/auth/callback,https://asp.signin.education.gov.uk,https://asp.signin.education.gov.uk/oidc/cb,https://asp.signin.education.gov.uk:443,https://asp.signin.education.gov.uk:443/oidc/cb,https://int-asp.signin.education.gov.uk/oidc/cb,https://signin-pr-asp-as.azurewebsites.net,https://signin-pr-asp-as.azurewebsites.net/oidc/cb,https://signin-pr-asp-as.azurewebsites.net:443,https://signin-pr-asp-as.azurewebsites.net:443/oidc/cb,https://dqt.signin.education.gov.uk,https://dqt.signin.education.gov.uk/oidc/cb,https://dqt.signin.education.gov.uk:443,https://dqt.signin.education.gov.uk:443/oidc/cb,https://int-dqt.signin.education.gov.uk/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net,https://lgn-dqt-as-github.azurewebsites.net/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net:443,https://lgn-dqt-as-github.azurewebsites.net:443/oidc/cb,https://signin-dqt-as.azurewebsites.net,https://signin-dqt-as.azurewebsites.net/oidc/cb,https://signin-dqt-as.azurewebsites.net:443,https://signin-dqt-as.azurewebsites.net:443/oidc/cb,https://dqt.signin.education.gov.uk,https://dqt.signin.education.gov.uk/oidc/cb,https://dqt.signin.education.gov.uk:443,https://dqt.signin.education.gov.uk:443/oidc/cb,https://int-dqt.signin.education.gov.uk/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net,https://lgn-dqt-as-github.azurewebsites.net/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net:443,https://lgn-dqt-as-github.azurewebsites.net:443/oidc/cb,https://signin-dqt-as.azurewebsites.net,https://signin-dqt-as.azurewebsites.net/oidc/cb,https://signin-dqt-as.azurewebsites.net:443,https://signin-dqt-as.azurewebsites.net:443/oidc/cb,https://coursedirectory.nationalcareersservice.org.uk/auth/cb,https://coursedirectory.nationalcareersservice.org.uk/Auth/Login,https://aforms.signin.education.gov.uk/oidc/cb,https://int-aforms.signin.education.gov.uk/oidc/cb,https://signin-pr-aforms-as.azurewebsites.net/oidc/cb,https://dfe-apprenticeships.eu.auth0.com/login/callback,https://psp.signin.education.gov.uk/oidc/cb,https://psp.signin.education.gov.uk:443/oidc/cb,https://marketplace.preview.crowncommercial.gov.uk/auth/dfe/callback,https://marketplace.service.crowncommercial.gov.uk/auth/dfe/callback,https://int-support.signin.education.gov.uk:443,https://int-support.signin.education.gov.uk:443/auth/cb,https://localhost:41020/auth/cb,https://s141p01-signin-sup-as.azurewebsites.net:443,https://s141p01-signin-sup-as.azurewebsites.net:443/auth/cb,https://signin-pr-sup-as.azurewebsites.net:443,https://signin-pr-sup-as.azurewebsites.net:443/auth/cb,https://signin-pr-suplnx-as.azurewebsites.net:443,https://signin-pr-suplnx-as.azurewebsites.net:443/auth/cb,https://nndrclaims.education.gov.uk/auth/cb,https://int-s2s.signin.education.gov.uk/oidc/cb,https://s141t03-signin-saml-s2s.azurewebsites.net/oidc/cb,https://s2s.signin.education.gov.uk/oidc/cb,https://s2s.signin.education.gov.uk:443/oidc/cb,https://dfedeveloperhub.azurewebsites.net/auth/cb,https://dfedeveloperhubuiuat.azurewebsites.net/auth/cb,http://teaching-jobs.service.gov.uk/auth/dfe/callback,https://teaching-vacancies.service.gov.uk/auth/dfe/callback,https://teachingjobs.education.gov.uk/auth/dfe/callback,https://teachingjobs.service.gov.uk/auth/dfe/callback,https://manage-tlevel-results.tlevels.gov.uk/auth/cb,https://s106p01-apply-as.azurewebsites.net/auth/dfe/callback,https://sandbox.apply-for-teacher-training.education.gov.uk/auth/dfe/callback,https://staging.apply-for-teacher-training.education.gov.uk/auth/dfe/callback,https://www.apply-for-teacher-training.education.gov.uk/auth/dfe/callback,https://dfedataproviderhub.azurewebsites.net/auth/cb,https://dfedataproviderhubuiuat.azurewebsites.net/auth/cb,https://migadm.signin.education.gov.uk:443,https://migadm.signin.education.gov.uk:443/auth/cb,https://signin-pr-migadm-as.azurewebsites.net:443,https://signin-pr-migadm-as.azurewebsites.net:443/auth/cb,https://apply.apprenticeships.education.gov.uk/signin-oidc,https://apply.apprenticeships.sfa.bis.gov.uk/signin-oidc,https://idsr.gcs501.gcfb.co.uk/callback,https://localhost:5443/callback,https://bat-prod-manage-courses-frontend-app.azurewebsites.net/auth/dfe/callback,https://bat-prod-mcfe-as.azurewebsites.net/auth/dfe/callback,https://s121p01-mcfe-as.azurewebsites.net/auth/dfe/callback,https://s121p01-ptt-as.azurewebsites.net,https://s121p01-ptt-as.azurewebsites.net/auth/cb,https://s121p01-ptt-as.azurewebsites.net/auth/dfe/callback,https://s121p01-ptt-as.azurewebsites.net/register/complete,https://www.publish-teacher-training-courses.service.gov.uk/auth/dfe/callback,https://www2.publish-teacher-training-courses.service.gov.uk/auth/dfe/callback,https://dqt.signin.education.gov.uk,https://dqt.signin.education.gov.uk/oidc/cb,https://dqt.signin.education.gov.uk:443,https://dqt.signin.education.gov.uk:443/oidc/cb,https://int-dqt.signin.education.gov.uk/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net,https://lgn-dqt-as-github.azurewebsites.net/oidc/cb,https://lgn-dqt-as-github.azurewebsites.net:443,https://lgn-dqt-as-github.azurewebsites.net:443/oidc/cb,https://signin-dqt-as.azurewebsites.net,https://signin-dqt-as.azurewebsites.net/oidc/cb,https://signin-dqt-as.azurewebsites.net:443,https://signin-dqt-as.azurewebsites.net:443/oidc/cb,https://s122p01-as-manageassessment-as.azurewebsites.net/auth/cb,https://s122p01-platform-web-01.azurewebsites.net/auth/cb,https://s122p01-platform-webtake-02.azurewebsites.net/auth/cb)",
                            "matchVariable": null
                        },
                        {
                            "selectorMatchOperator": "EqualsAny",
                            "selector": "(_dsi_state.profiles,_dsi_state.profiles.sig)",
                            "matchVariable": null
                        }
                    ],
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.2",
                            "ruleGroupOverrides": []
                        },
                        {
                            "ruleSetType": "Microsoft_BotManagerRuleSet",
                            "ruleSetVersion": "0.1",
                            "ruleGroupOverrides": []
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Standard"
            },
            "name": "[variables('resourceNames').publicIpName]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/applicationGateways",
            "name": "[variables('applicationGateway').name]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('resourceIds').userAssignedIdentityId]": {}
                }
            },
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2"
                },
                "forceFirewallPolicyAssociation": true,
                "firewallPolicy": {
                    "id": "[variables('resourceIds').wafPolicyId]"
                },
                "sslPolicy": {
                    "policyType": "Predefined",
                    "policyName": "AppGwSslPolicy20170401S"
                },
                "autoscaleConfiguration": {
                    "minCapacity": 2,
                    "maxCapacity": 10
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "gateway-ip-config",
                        "properties": {
                            "subnet": {
                                "id": "[variables('resourceIds').subnetResourceId]"
                            }
                        },
                        "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "[variables('applicationGateway').sslCertificate.name]",
                        "properties": {
                            "keyVaultSecretId": "[parameters('sslKeyVaultCertSecretId')]",
                            "httpListeners": [
                                {
                                    "id": "[variables('applicationGateway').httpListener.resourceId]"
                                }
                            ]
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('applicationGateway').frontEndIpConfiguration.name]",
                        "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[variables('resourceIds').publicIpResourceId]"
                            },
                            "httpListeners": [
                                {
                                    "id": "[variables('applicationGateway').httpListener.resourceId]"
                                }
                            ]
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('applicationGateway').frontEndPort.name]",
                        "properties": {
                            "port": "[variables('applicationGateway').frontEndPort.port]",
                            "httpListeners": [
                                {
                                    "id": "[variables('applicationGateway').httpListener.resourceId]"
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/frontendPorts"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('applicationGateway').hostedServices.default.poolName]",
                        "properties": {
                            "backendAddresses": [],
                            "requestRoutingRules": [
                                {
                                    "id": "[variables('applicationGateway').routingRule.resourceId]"
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                    },
                    {
                        "name": "[concat(parameters('hostName1'),'-pool')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[variables('domains').oidcFqdn1]"
                                },
                                {
                                    "fqdn": "[variables('domains').oidcFqdn2]"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[concat(parameters('hostName2'),'-pool')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[variables('domains').interactions1]"
                                },
                                {
                                    "fqdn": "[variables('domains').interactions2]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('applicationGateway').hostedServices.default.backendSetting.name]",
                        "properties": {
                            "port": "[variables('applicationGateway').hostedServices.default.backendSetting.port]",
                            "protocol": "[variables('applicationGateway').hostedServices.default.backendSetting.protocol]",
                            "cookieBasedAffinity": "Enabled",
                            "connectionDraining": {
                                "enabled": true,
                                "drainTimeoutInSec": 60
                            },
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": "[variables('applicationGateway').hostedServices.default.backendSetting.requestTimeout]",
                            "probe": {
                                "id": "[variables('resourceIds').applicationGateway.hostedServices.default.probeResourceId]"
                            },
                            "requestRoutingRules": [
                                {
                                    "id": "[variables('applicationGateway').routingRule.resourceId]"
                                }
                            ]

                        },
                        "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
                    },
                    {
                        "name": "[concat(parameters('hostName1'),'-backend-setting')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "connectionDraining": {
                                "enabled": false,
                                "drainTimeoutInSec": 1
                            },
                            "pickHostNameFromBackendAddress": true,
                            "path": "/",
                            "requestTimeout": 30,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/probes/oidc-backend-setting-probe')]"
                            }
                        }
                    },
                    {
                        "name": "[concat(parameters('hostName2'),'-backend-setting')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "connectionDraining": {
                                "enabled": false,
                                "drainTimeoutInSec": 1
                            },
                            "pickHostNameFromBackendAddress": true,
                            "path": "/",
                            "requestTimeout": 30,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/probes/interactions-backend-setting-probe')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('applicationGateway').httpListener.name]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('applicationGateway').frontEndIpConfiguration.resourceId]"
                            },
                            "frontendPort": {
                                "id": "[variables('applicationGateway').frontEndPort.resourceId]"
                            },
                            "protocol": "Https",
                            "requireServerNameIndication": false,
                            "sslCertificate": {
                                "id": "[variables('applicationGateway').sslCertificate.resourceId]"
                            },
                            "requestRoutingRules": [
                                {
                                    "id": "[variables('applicationGateway').routingRule.resourceId]"
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/httpListeners"
                    },
                    {
                        "name": "[concat(parameters('hostName1'),'-ssl-listener')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('applicationGateway').frontEndIpConfiguration.resourceId]"
                            },
                            "frontendPort": {
                                "id": "[variables('applicationGateway').frontEndPort.resourceId]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[variables('applicationGateway').sslCertificate.resourceId]"
                            },
                            "hostName": "[variables('domains').oidcUrl]",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "[concat(parameters('hostName2'),'-ssl-listener')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('applicationGateway').frontEndIpConfiguration.resourceId]"
                            },
                            "frontendPort": {
                                "id": "[variables('applicationGateway').frontEndPort.resourceId]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[variables('applicationGateway').sslCertificate.resourceId]"
                            },
                            "hostName": "[variables('domains').interactionsUrl]",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "[variables('applicationGateway').routingRule.name]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[variables('applicationGateway').httpListener.resourceId]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('applicationGateway').backendPool.resourceId]"
                            },
                            "backendHttpSettings": {
                                "id": "[variables('applicationGateway').backendSetting.resourceId]"
                            }
                        },
                        "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
                    },
                    {
                        "name": "[concat(parameters('hostName1'),'-ruleset')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/httpListeners/oidc-ssl-listener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/backendAddressPools/oidc-pool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/backendHttpSettingsCollection/oidc-backend-setting')]"
                            },
                            "rewriteRuleSet": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/rewriteRuleSets/oidc_rewrite')]"
                            }
                        }
                    },
                    {
                        "name": "[concat(parameters('hostName2'),'-ruleset')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/httpListeners/interactions-ssl-listener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/backendAddressPools/interactions-pool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/backendHttpSettingsCollection/interactions-backend-setting')]"
                            },
                            "rewriteRuleSet": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGateway').name), '/rewriteRuleSets/interactions_rewrite')]"
                            }
                        }
                    }
                ],
                "urlPathMaps": [],
                "probes": [
                    {
                        "name": "[variables('applicationGateway').hostedServices.default.backendSetting.probe.name]",
                        "properties": {
                            "protocol": "[variables('applicationGateway').hostedServices.default.backendSetting.probe.protocol]",
                            "path": "[variables('applicationGateway').hostedServices.default.backendSetting.probe.path]",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {},
                            "backendHttpSettings": [
                                {
                                    "id": "[variables('resourceIds').applicationGateway.hostedServices.default.backendSettingResourceId]"
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/probes"
                    },
                    {
                        "name": "[concat(parameters('hostName1'),'-backend-setting-probe')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "/healthcheck",
                            "interval": 10,
                            "timeout": 5,
                            "unhealthyThreshold": 2,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    },
                    {
                        "name": "[concat(parameters('hostName2'),'-backend-setting-probe')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "/healthcheck",
                            "interval": 10,
                            "timeout": 5,
                            "unhealthyThreshold": 2,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [
                    {
                        "name": "[concat(parameters('hostName1'),'_rewrite')]",
                        "properties": {
                            "rewriteRules": [
                                {
                                    "ruleSequence": 100,
                                    "conditions": [],
                                    "name": "AddXForwardedHostHeader",
                                    "actionSet": {
                                        "requestHeaderConfigurations": [
                                            {
                                                "headerName": "X-Forwarded-Host",
                                                "headerValue": "[variables('domains').oidcUrl]"
                                            }
                                        ],
                                        "responseHeaderConfigurations": []
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[concat(parameters('hostName2'),'_rewrite')]",
                        "properties": {
                            "rewriteRules": [
                                {
                                    "ruleSequence": 100,
                                    "conditions": [],
                                    "name": "AddXForwardedHostHeader",
                                    "actionSet": {
                                        "requestHeaderConfigurations": [
                                            {
                                                "headerName": "X-Forwarded-Host",
                                                "headerValue": "[variables('domains').interactionsUrl]"
                                            }
                                        ],
                                        "responseHeaderConfigurations": []
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies', variables('resourceNames').wafPolicy)]"
            ]
        }
    ],
    "outputs": {
        "resourceName": {
            "type": "string",
            "value": "[variables('applicationGateway').name]"
        },
        "resourceId": {
            "type": "string",
            "value": "[variables('applicationGateway').resourceId]"
        }
    }
}