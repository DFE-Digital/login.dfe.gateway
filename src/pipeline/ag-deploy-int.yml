parameters:
- name: serviceConnection
  type: string
- name: subscriptionId
  type: string
- name: environmentName
  type: string
- name: environmentId
  type: string
- name: sslCertificateName
  type: string
- name: applicationName
  type: string
  default: gateway
- name: deploymentLocation
  type: string
  default: westeurope
- name: projectId
  type: string
  default: s141
- name: projectCoreRgSuffix
  type: string
  default: projectcore
- name: subnetName
  type: string
  default: gateway
jobs:
- deployment: deploy
  displayName: 'deploy ag - ${{parameters.environmentName}}'
  environment: '${{parameters.environmentName}}'
  pool:
    vmImage: ubuntu-latest
  variables:
    keyVaultName: '${{parameters.projectId}}${{parameters.environmentId}}-signin-global-kv'
    sslCertificateName: '${{parameters.sslCertificateName}}'
    resourceGroupName: '${{parameters.projectId}}${{parameters.environmentId}}-${{parameters.environmentName}}gateway'
    gatewayIdentityName: '${{parameters.projectId}}${{parameters.environmentId}}-${{parameters.environmentName}}-gateway-id'
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - task: AzureCLI@2
          name: preDeploy
          displayName: Pre Deploy
          inputs:
            azureSubscription: '${{parameters.serviceConnection}}'
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              write-host creating identity for ag
              $ident = az identity create -g $env:RESOURCEGROUPNAME -n $env:GATEWAYIDENTITYNAME | ConvertFrom-Json
              write-host created identity : $ident.name
              write-host setting kv policy for $ident.name

              write-host set keyvault policy for ag identity
              az keyvault set-policy --name $env:KEYVAULTNAME --object-id $ident.principalId --certificate-permissions get getissuers list listissuers --secret-permissions get list

              write-host retrieving ssl certificate
              $cert = az keyvault certificate show --vault-name $env:KEYVAULTNAME -n $env:SSLCERTIFICATENAME | ConvertFrom-Json
              write-host found $cert.id
              $certId = $cert.sid
              write-host putting cert secret id on the pipeline
              write-host "##vso[task.setvariable variable=sslKeyVaultCertSecretId]$certId"
        - template: /Infrastructure/steps/deploy-template.yml@devopsTemplates
          parameters:
            serviceConnection: '${{parameters.serviceConnection}}'
            subscriptionId: '${{parameters.subscriptionId}}'
            resourceGroupName: $(resourceGroupName)
            location: '${{parameters.deploymentLocation}}'
            templateFilePath: $(Pipeline.Workspace)/s/src/arm/gateway-int.json
            armParameterOverrideString: ' -applicationName "${{parameters.applicationName}}" -environmentName "${{parameters.environmentName}}" -projectCoreRgName "${{parameters.projectId}}${{parameters.environmentId}}-${{parameters.projectCoreRgSuffix}}" -vnetName "${{parameters.applicationName}}-${{parameters.environmentName}}-vnet" -subnetName "${{parameters.subnetName}}" -sslKeyVaultCertSecretId "$(sslKeyVaultCertSecretId)" -userAssignedIdentityName "$(gatewayIdentityName)" '
            processOutputs: false