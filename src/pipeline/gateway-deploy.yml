parameters:
  - name: serviceConnection
    type: string
  - name: subscriptionId
    type: string
  - name: environmentName
    type: string
  - name: environmentId
    type: string
  - name: sslCertificateName
    type: string
  - name: applicationName
    type: string
    default: gateway
  - name: deploymentLocation
    type: string
    default: westeurope
  - name: projectId
    type: string
    default: s141
  - name: projectCoreRgSuffix
    type: string
    default: projectcore
  - name: subnetName
    type: string
    default: gateway
  - name: isProduction
    type: string
    default: false

jobs:
  - deployment: deploy
    displayName: "deploy ag - ${{parameters.environmentName}}"
    environment: "${{parameters.environmentName}}"
    pool:
      vmImage: ubuntu-latest
    variables:
      - group: platform-${{parameters.environmentName}}
      - name: keyVaultName
        value: "${{parameters.projectId}}${{parameters.environmentId}}-signin-global-kv"
      - name: sslCertificateName
        value: "${{parameters.sslCertificateName}}"
      - name: resourceGroupName
        value: "${{parameters.projectId}}${{parameters.environmentId}}-${{parameters.environmentName}}gateway"
      - name: gatewayIdentityName
        value: "${{parameters.projectId}}${{parameters.environmentId}}-${{parameters.environmentName}}-gateway-id"
      - name: subscriptionId
        value: "${{parameters.subscriptionId}}"
      - name: applicationName
        value: "${{lower(parameters.applicationName)}}-${{lower(parameters.environmentName)}}-ag"

    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureCLI@2
              name: preDeploy
              displayName: Pre Deploy
              inputs:
                azureSubscription: "${{parameters.serviceConnection}}"
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  write-host creating identity for ag
                  $ident = az identity create -g $env:RESOURCEGROUPNAME -n $env:GATEWAYIDENTITYNAME | ConvertFrom-Json
                  write-host created identity : $ident.name
                  write-host setting kv policy for $ident.name

                  write-host set keyvault policy for ag identity
                  az keyvault set-policy --name $env:KEYVAULTNAME --object-id $ident.principalId --certificate-permissions get getissuers list listissuers --secret-permissions get list

                  write-host retrieving ssl certificate
                  $cert = az keyvault certificate show --vault-name $env:KEYVAULTNAME -n $env:SSLCERTIFICATENAME | ConvertFrom-Json
                  write-host found $cert.id
                  $certId = $cert.sid
                  write-host putting cert secret id on the pipeline
                  write-host "##vso[task.setvariable variable=sslKeyVaultCertSecretId]$certId"

                  az network application-gateway stop --subscription $env:SUBSCRIPTIONID --resource-group $env:RESOURCEGROUPNAME --name $env:APPLICATIONNAME
            - template: /Infrastructure/steps/deploy-template.yml@devopsTemplates
              parameters:
                serviceConnection: "${{parameters.serviceConnection}}"
                subscriptionId: "${{parameters.subscriptionId}}"
                resourceGroupName: $(resourceGroupName)
                location: "${{parameters.deploymentLocation}}"
                templateFilePath: $(Pipeline.Workspace)/s/src/arm/gateway.json
                armParameterOverrideString: ' -applicationName "${{parameters.applicationName}}" -environmentName "${{parameters.environmentName}}" -projectCoreRgName "${{parameters.projectId}}${{parameters.environmentId}}-${{parameters.projectCoreRgSuffix}}" -vnetName "${{parameters.applicationName}}-${{parameters.environmentName}}-vnet" -subnetName "gateway-new" -sslKeyVaultCertSecretId "$(sslKeyVaultCertSecretId)" -userAssignedIdentityName "$(gatewayIdentityName)" -isProduction "${{parameters.isProduction}}" -environmentId "${{parameters.environmentId}}" '
                processOutputs: false
                tags: $(Tags)
            - task: AzureCLI@2
              name: startGateWay
              displayName: Start GateWay
              inputs:
                azureSubscription: "${{parameters.serviceConnection}}"
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  az network application-gateway start --subscription $env:SUBSCRIPTIONID --resource-group $env:RESOURCEGROUPNAME --name $env:APPLICATIONNAME
